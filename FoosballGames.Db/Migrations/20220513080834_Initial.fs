// <auto-generated />
namespace FoosballGames.Migrations

open System
open FoosballGames
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<FoosballGamesContext>)>]
[<Migration("20220513080834_Initial")>]
type Initial() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.EnsureSchema(
            name = "FoosballGames"
            ) |> ignore

        migrationBuilder.CreateTable(
            name = "FoosballGames"
            ,schema = "FoosballGames"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<Guid>(
                        nullable = false
                        ,``type`` = "uuid"
                    )
                JsonContent =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "json"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_FoosballGames", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                )
        ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "FoosballGames"
            ,schema = "FoosballGames"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasDefaultSchema("FoosballGames")
            .HasAnnotation("ProductVersion", "6.0.5")
            .HasAnnotation("Relational:MaxIdentifierLength", 63) |> ignore

        modelBuilder.Entity("FoosballGames.DbFoosballGame", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("uuid")
                |> ignore

            b.Property<string>("JsonContent")
                .IsRequired(true)
                .HasColumnType("json")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.ToTable("FoosballGames", "FoosballGames") |> ignore

        )) |> ignore

